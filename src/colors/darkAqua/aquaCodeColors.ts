import { aquaColors } from "./aquaColors";

export const aquaCodeColors = {
  languages: {
    comment: aquaColors.oysterPink,
    general: aquaColors.mauve,
    brackets: aquaColors.dawnPink,
    importVar: aquaColors.dawnPink,
    string: aquaColors.yellow,
    storage: aquaColors.mauve,
    variables: aquaColors.dawnPink,
    phpVariables: aquaColors.tickleMePink,
    constant: aquaColors.tickleMePink,
    function: aquaColors.turquoise,
    params: aquaColors.orange,
    class: aquaColors.aquaMarine,
    attributes: aquaColors.tickleMePink,
    objectMethod: aquaColors.robinsEggBlue,
    this: aquaColors.tickleMePink,
    interface: aquaColors.aquaMarine,
    regex: aquaColors.tickleMePink,
    regexString: aquaColors.tickleMePink,
    regexPositive: aquaColors.tickleMePink,
    regexCharacter: aquaColors.yellow,
    regexAssertion: aquaColors.turquoise,
    jsDocKeyWord: aquaColors.tickleMePink,
    jsDockTypes: aquaColors.ice,
    jsDockComment: aquaColors.sunglow,
    test: aquaColors.geraldine,
    other: aquaColors.tickleMePink,
  },
  react: {
    classComponent: aquaColors.aquaMarine,
  },
  vue: {
    default: aquaColors.chartreuse,
    types: aquaColors.aquaMarine,
    other: aquaColors.tickleMePink,
    test: aquaColors.geraldine,
  },
  json: {
    comment: aquaColors.oysterPink,
    brackets: aquaColors.dawnPink,
    constant: aquaColors.aeroBlue,
    test: aquaColors.geraldine,
  },
  xml: {
    meta: aquaColors.tickleMePink,
    version: aquaColors.tickleMePink,
    tag: aquaColors.turquoise,
    attribute: aquaColors.tickleMePink,
    test: aquaColors.geraldine,
  },
  html: {
    meta: aquaColors.tickleMePink,
    tag: aquaColors.turquoise,
    attribute: aquaColors.tickleMePink,
    text: aquaColors.dawnPink,
    constant: aquaColors.aeroBlue,
    string: aquaColors.yellow,
    test: aquaColors.tickleMePink,
  },
  scss: {
    keyword: aquaColors.tickleMePink,
    type: aquaColors.electricLime,
    meta: aquaColors.dawnPink,
    tag: aquaColors.turquoise,
    custom: aquaColors.aeroBlue,
    class: aquaColors.aquaMarine,
    id: aquaColors.aeroBlue,
    pseudo: aquaColors.ice,
    property: aquaColors.melrose,
    propertyValue: aquaColors.mauve,
    unit: aquaColors.yellow,
    variable: aquaColors.geraldine,
    variable2: aquaColors.mauve,
    comment: aquaColors.lilyWhite,
    string: aquaColors.yellow,
    bracket: aquaColors.dawnPink,
    function: aquaColors.turquoise,
    test: aquaColors.geraldine,
  },
  gitGnoreAtr: {
    string: aquaColors.orange,
    hash: aquaColors.geraldine,
    test: aquaColors.geraldine,
  },
  markdown: {
    header: aquaColors.melrose,
    source: aquaColors.dawnPink,
    diff: aquaColors.mauve,
    inserted: aquaColors.electricLime,
    deleted: aquaColors.lightRed,
    changed: aquaColors.sunglow,
    invalid: aquaColors.geraldine,
    deprecated: aquaColors.oysterPink,
    filename: aquaColors.yellow,
    error: aquaColors.geraldine,
    bold: aquaColors.mauve,
    italic: aquaColors.yellow,
    list: aquaColors.aeroBlue,
    inline: aquaColors.turquoise,
    links: aquaColors.aquaMarine,
    linkText: aquaColors.robinsEggBlue,
    bloquotes: aquaColors.electricLime,
    horizontal: aquaColors.tickleMePink,
    codeBlocks: aquaColors.chartreuse,
    constants: aquaColors.orange,
    braces: aquaColors.melrose,
    bracesParagraph: aquaColors.sunglow,
    bracesBlock: aquaColors.turquoise,
    test: aquaColors.geraldine,
    other: aquaColors.tickleMePink,
  },
};
